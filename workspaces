#!/usr/bin/env bash

set -e

PREFIX=$HOME/w

die () { echo "$@" >&2; exit 2; }

WORKSPACES_NIX=${NIX_SRC-`pwd`}/workspaces.nix

# To variables 'workspace_names' (array)
eval_workspace_names ()
{
  local config_eval config
  config=`realpath "$1"`
  eval_json=`nix eval -f "$WORKSPACES_NIX" --json --arg pkgs "import <nixpkgs> {}" --argstr config "$config" workspace_names`
  readarray -t workspace_names < <(jq -r '.[]' <<<"$eval_json")
}

open_workspace ()
{
  local wname="$1" config
  config=`realpath "$2"`
  p=$PREFIX/$wname
  mkdir -p "$p"
  cd "$p"
  exec nix-shell --run "exec activate" \
    --argstr workspaces_nix "$WORKSPACES_NIX" \
    --argstr config "$config" \
    --argstr wname "$wname" \
    -E '
  { pkgs ? import <nixpkgs> {}, workspaces_nix, config, wname }:
  let ws = import workspaces_nix { inherit pkgs config; }; in
  ws.make_shell { inherit wname; }'
}

# Options
cmd=${1-}
shift || true
while getopts ":f:" opt; do
	case "$opt" in
		f) config=$OPTARG ;;
		*) exit 2 ;;
	esac
done
shift $((OPTIND-1))

USAGE_OPEN="open -f <config> <workspace name>"
USAGE_LIST="list -f <config>"

case "$cmd" in
  "open")
    wname=${1:?Usage: workspaces $USAGE_OPEN}
    open_workspace "$wname" "${config:?Usage: workspaces $USAGE_OPEN}"
    ;;

  "list")
    declare -a workspace_names
    eval_workspace_names "${config:?Usage: workspaces $USAGE_LIST}"
    for wname in "${workspace_names[@]}"; do
      echo "$wname"
    done
    ;;

  *)
    cat <<EOF >&2
Usage: workspaces { open | list }

  $USAGE_OPEN
    Open the specified workspace. A directory in $PREFIX is created if it
    doesn't exist, the activation script is run and finally the shell is opened.

  $USAGE_LIST
    List workspaces.
EOF
    ;;
esac
